# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2


    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
      with:
        # Set always-auth in npmrc
        # always-auth: # optional, default is false
        # Version Spec of the version to use.  Examples: 10.x, 10.15.1, >=10.15.0
        node-version: 12.16 # optional, default is 10.x
        # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN
        #registry-url: # optional
        # Optional scope for authenticating against scoped registries
        #scope: # optional
        # Deprecated. Use node-version instead. Will not be supported after October 1, 2019
        #version: # optional


    # Runs a single command using the runners shell
    - name: Install deps
      run: npm i
      
    # Runs a single command using the runners shell
    - name: Build typescript
      run: npx tsc

    # Runs a set of commands using the runners shell
    - name: Bundle production
      run: npm run build:prod
      
    - name: GitHub Pages action
      uses: peaceiris/actions-gh-pages@v3.6.1
      with:
        # Set a SSH private key from repository secret value for pushing to the remote branch.
        # deploy_key: # optional
        # Set a generated GITHUB_TOKEN for pushing to the remote branch.
        github_token: $GITHUB_TOKEN
        # Set a personal access token for pushing to the remote branch.
        #personal_token: # optional
        # Set a target branch for deployment.
        publish_branch: master # optional, default is gh-pages
        # Set an input directory for deployment.
        publish_dir: dist # optional, default is public
        # Set an external repository (owner/repo).
        external_repository: franzzua/solid-context # optional
        # If empty commits should be made to the publication branch
        #allow_empty_commit: # optional, default is false
        # If existing files in the publish branch should be not removed before deploying
        #keep_files: # optional, default is false
        # Keep only the latest commit on a GitHub Pages branch
        force_orphan: true # optional, default is false
        # Set Git user.name
        #user_name: # optional
        # Set Git user.email
        #user_email: # optional
        # Set a custom commit message with a triggered commit hash
        #commit_message: # optional
        # Set a custom full commit message without a triggered commit hash
        #full_commit_message: # optional
        # Set tag name
        #tag_name: # optional
        # Set tag message
        #tag_message: # optional
        # Enable the GitHub Pages built-in Jekyll
        #enable_jekyll: # optional, default is false
        # An alias for enable_jekyll to disable adding .nojekyll file to master or gh-pages branches
        #disable_nojekyll: # optional, default is false
        # Set custom domain
        #cname: # optional
